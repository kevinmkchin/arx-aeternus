#version 400 core

// THE FRAGMENT SHADER

in vec2 pass_textureCoords;
in vec3 surfaceNormal;
in vec3 towardsLightVector;
in float visibility;

out vec4 out_Color;

uniform sampler2D textureSampler;
uniform vec3 lightColor;
uniform float ambientLightFactor;
uniform vec3 skyColor;

void main(void){

    vec3 unitNormal = normalize(surfaceNormal);
    vec3 unitLightVector = normalize(towardsLightVector);

    float nDot1 = dot(unitNormal, unitLightVector);
    float brightness = max(nDot1, ambientLightFactor);
    vec3 diffuse = brightness * lightColor;

    vec4 textureColour = texture(textureSampler, pass_textureCoords);
    if(textureColour.a < 0.5)
    {
        discard;
    }


    out_Color = vec4(diffuse, 1.0) * texture(textureSampler, pass_textureCoords);
    out_Color = mix(vec4(skyColor, 1.0), out_Color, visibility);

}